name: Build AzerothCore-WoTLK on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: windows-2022
    
    steps:
    - name: Checkout AzerothCore-WoTLK
      uses: actions/checkout@v4
      with:
        repository: azerothcore/azerothcore-wotlk  # 指定仓库
        ref: master                                # 指定master分支
        submodules: recursive                      # 拉取所有子模块
        fetch-depth: 0                             # 拉取完整历史
        
    - name: Set up Visual Studio 2022
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '2022'
        
    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: latest
        
    - name: Install dependencies
      run: |
        # 安装Chocolatey包管理器（如果尚未安装）
        if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        }
        
        # 安装MySQL 8.4
        choco install mysql --version=8.4.0 -y --no-progress
        
        # 安装OpenSSL
        choco install openssl -y --no-progress
        
        # 安装Boost 1.78
        choco install boost --version=1.78.0 -y --no-progress
        
        # 设置环境变量，帮助CMake找到依赖
        echo "MYSQL_ROOT_DIR=$env:ProgramFiles\MySQL\MySQL Server 8.4" >> $env:GITHUB_ENV
        echo "BOOST_ROOT=$env:ProgramFiles\boost\boost_1_78_0" >> $env:GITHUB_ENV
        echo "OPENSSL_ROOT_DIR=$env:ProgramFiles\OpenSSL-Win64" >> $env:GITHUB_ENV
      shell: powershell
      
    - name: Configure with CMake
      run: |
        mkdir build
        cd build
        cmake .. `
          -G "Visual Studio 17 2022" `
          -A x64 `
          -DCMAKE_INSTALL_PREFIX=../bin `
          -DBUILD_TESTING=OFF `
          -DSCRIPTS=static `
          -DTOOLS=ON `
          -DMYSQL_ROOT_DIR="${{ env.MYSQL_ROOT_DIR }}" `
          -DBOOST_ROOT="${{ env.BOOST_ROOT }}" `
          -DOPENSSL_ROOT_DIR="${{ env.OPENSSL_ROOT_DIR }}"
      shell: powershell
      
    - name: Build with MSBuild
      run: |
        cd build
        msbuild AzerothCore.sln /p:Configuration=Release /p:Platform=x64 /m /p:BuildInParallel=true
      shell: powershell
      
    - name: Install built binaries
      run: |
        cd build
        msbuild INSTALL.vcxproj /p:Configuration=Release /p:Platform=x64
      shell: powershell
      
    - name: List build output (for debugging)
      run: |
        Write-Host "Installed binaries:"
        dir ../bin
        Write-Host "Build output:"
        dir ../build/bin/Release
      shell: powershell
      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azerothcore-wotlk-x64-release
        path: |
          bin/
          build/bin/Release/
        retention-days: 7  # 保留7天
