name: Playerbots-Linux_x64

on:
  workflow_dispatch:
  schedule:
    - cron: 0 19 * * *

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      # 路径配置（调整INSTALL_DIR到BUILD_DIR内部）
      ROOT_DIR: ./azerothcore
      BUILD_DIR: ./azerothcore/build
      INSTALL_DIR: ./azerothcore/build/install
      MODULES_DIR: ./azerothcore/modules
      # 核心配置
      ACORE_REPO: "https://github.com/liyunfan1223/azerothcore-wotlk.git"
      ACORE_BRANCH: "Playerbot"
      BUILD_TYPE: "MinSizeRel"
      MODULES_INPUT: |
        https://github.com/liyunfan1223/mod-playerbots.git master
        https://github.com/azerothcore/mod-eluna.git master
        https://github.com/azerothcore/mod-learn-spells.git master
        https://github.com/azerothcore/mod-autobalance.git master
        https://github.com/azerothcore/mod-auto-revive.git master

    steps:
      - name: 安装依赖
        run: |
          sudo apt update -y
          sudo apt install -y \
            git cmake make clang \
            libmysqlclient-dev libssl-dev \
            libbz2-dev libreadline-dev libncurses-dev \
            libboost-all-dev libcurl4-openssl-dev
          sudo apt clean

      - name: 生成时间
        id: ts
        run: |
          echo "utcs=$(TZ=Asia/Shanghai date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: 克隆仓库
        run: |
          git clone --branch "${{ env.ACORE_BRANCH }}" "${{ env.ACORE_REPO }}" "${{ env.ROOT_DIR }}"
          cd "${{ env.ROOT_DIR }}" && git submodule update --init --recursive

      - name: 拉取模块
        id: modules
        run: |
          mkdir -p "${{ env.MODULES_DIR }}"
          success=()
          failure=()
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            repo=$(echo "$line" | awk '{print $1}')
            branch=$(echo "$line" | awk '{print $2}')
            name=$(basename "$repo" .git)
            if git clone --depth 1 --branch "$branch" "$repo" "${{ env.MODULES_DIR }}/$name"; then
              success+=("$name（$branch）")
            else
              failure+=("$name（$branch）")
              echo "⚠️ 模块 $name 克隆失败，将继续构建"
            fi
          done <<< "${{ env.MODULES_INPUT }}"
          echo "success=$(IFS=';'; echo "${success[*]}")" >> $GITHUB_OUTPUT
          echo "failure=$(IFS=';'; echo "${failure[*]}")" >> $GITHUB_OUTPUT

      - name: 配置与编译
        run: |
          mkdir -p "${{ env.BUILD_DIR }}" && cd "${{ env.BUILD_DIR }}"
          cmake ../ \
            -DCMAKE_BUILD_TYPE="${{ env.BUILD_TYPE }}" \
            -DCMAKE_INSTALL_PREFIX="${{ env.INSTALL_DIR }}" \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DWITH_WARNINGS=1 \
            -DTOOLS_BUILD=all \
            -DSCRIPTS=static \
            -DMODULES=static
          make -j$(nproc) && make install

      - name: 复制文件打包
        id: package
        run: |
          mkdir -p /home/runner/Release
          cp -r /home/runner/work/build_azerothcore/build_azerothcore/azerothcore/build/azerothcore/build/install/* /home/runner/Release/
          tar -czvf "Playerbots_linux_x64-${{ steps.ts.outputs.utcs }}.tar.gz" -C /home/runner Release
          echo "name=Playerbots_linux_x64-${{ steps.ts.outputs.utcs }}.tar.gz" >> $GITHUB_OUTPUT
          
      - name: 创建Release并上传资产
        uses: ncipollo/release-action@v1
        with:
         tag: "Playerbots_Linux-x64_${{ steps.ts.outputs.utcs }}"
         name: "Playerbots_Linux-x64_${{ steps.ts.outputs.utcs }}"
         body: |
              ### Playerbots_Linux-x64_${{ steps.ts.outputs.utcs }}
         artifacts: "./${{ steps.package.outputs.name }}"
         token: ${{ secrets.BUILD_AZEROTHCORE }}
         replacesArtifacts: true

      - name: 保留最新4个Release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
           keep_latest: 4
           delete_tags: true
        env:
         GITHUB_TOKEN: ${{ secrets.BUILD_AZEROTHCORE }}
