name: 自动清理所有Actions运行记录
on:
  # 定时触发：UTC时间17点 = 北京时间1点（每天执行）
  schedule:
    - cron: '0 17 * * *'
  # 手动触发（用于测试，可选）
  workflow_dispatch:

jobs:
  cleanup-all-runs:
    runs-on: ubuntu-latest
    permissions:
      # 必须声明的权限：删除Actions记录需要actions:write
      actions: write
      contents: read
    steps:
      # 步骤1：安装依赖（GitHub CLI + jq解析JSON）
      - name: 安装工具
        run: |
          # 安装jq（解析JSON数据）
          sudo apt-get update && sudo apt-get install -y jq
          # 安装GitHub CLI（调用API）
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update && sudo apt-get install -y gh

      # 步骤2：配置GitHub认证（使用内置Token）
      - name: 认证GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status  # 验证认证状态（可选）

      # 步骤3：批量删除所有Actions运行记录
      - name: 清理所有历史运行记录
        run: |
          # 1. 自动获取仓库信息（无需手动修改）
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"
          echo "开始清理仓库 $OWNER/$REPO 的所有Actions运行记录..."

          # 2. 分页获取所有运行记录的ID（处理超过100条的情况）
          ALL_RUN_IDS=()
          PAGE=1
          PER_PAGE=100  # 每次最多获取100条
          while true; do
            echo "获取第 $PAGE 页运行记录..."
            # 调用API获取当前页的运行记录（包含ID）
            RUNS=$(gh api --method GET "/repos/$OWNER/$REPO/actions/runs?page=$PAGE&per_page=$PER_PAGE" \
              --jq '.workflow_runs | map(.id) | .[]')
            
            # 若当前页无记录，退出循环
            if [ -z "$RUNS" ]; then
              echo "已获取所有运行记录，共 ${#ALL_RUN_IDS[@]} 条"
              break
            fi
            
            # 将当前页的ID添加到数组
            while IFS= read -r RUN_ID; do
              ALL_RUN_IDS+=("$RUN_ID")
            done <<< "$RUNS"
            
            PAGE=$((PAGE + 1))
          done

          # 3. 若没有记录，直接退出
          if [ ${#ALL_RUN_IDS[@]} -eq 0 ]; then
            echo "未找到任何Actions运行记录，无需清理。"
            exit 0
          fi

          # 4. 循环删除所有记录（跳过正在运行的记录）
          echo "开始删除 ${#ALL_RUN_IDS[@]} 条运行记录..."
          for RUN_ID in "${ALL_RUN_IDS[@]}"; do
            echo "尝试删除记录 ID: $RUN_ID"
            # 调用API删除（忽略错误，避免因“正在运行”等状态中断）
            if gh api --method DELETE "/repos/$OWNER/$REPO/actions/runs/$RUN_ID" > /dev/null 2>&1; then
              echo "成功删除记录 ID: $RUN_ID"
            else
              echo "警告：记录 ID: $RUN_ID 无法删除（可能正在运行或已被删除），跳过。"
            fi
            # 延迟1秒，避免触发API速率限制
            sleep 1
          done

          echo "清理完成！所有可删除的Actions运行记录已删除。"
