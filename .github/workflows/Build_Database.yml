name: Build_Database

on:
  workflow_dispatch:
  schedule:
    - cron: 0 19 * * *

jobs:
  Build_Database:
    runs-on: ubuntu-22.04
    env:
      ROOT_DIR: ./azerothcore
      MODULES_DIR: ./azerothcore/modules
      ACORE_REPO: "https://github.com/mod-playerbots/azerothcore-wotlk.git"
      ACORE_BRANCH: "Playerbot"
      MODULES_INPUT: |
        https://github.com/mod-playerbots/mod-playerbots.git master
    steps:
      - name: 生成时间
        id: ts
        run: |
          echo "utcs=$(TZ=Asia/Shanghai date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
          
      - name: 克隆仓库
        run: |
          git clone --branch "${{ env.ACORE_BRANCH }}" "${{ env.ACORE_REPO }}" "${{ env.ROOT_DIR }}"
          cd "${{ env.ROOT_DIR }}" && git submodule update --init --recursive

      - name: 拉取模块
        id: modules
        run: |
          mkdir -p "${{ env.MODULES_DIR }}"
          success=()
          failure=()
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            repo=$(echo "$line" | awk '{print $1}')
            branch=$(echo "$line" | awk '{print $2}')
            name=$(basename "$repo" .git)
            if git clone --depth 1 --branch "$branch" "$repo" "${{ env.MODULES_DIR }}/$name"; then
              success+=("$name（$branch）")
            else
              failure+=("$name（$branch）")
              echo "⚠️ 模块 $name 克隆失败，将继续构建"
            fi
          done <<< "${{ env.MODULES_INPUT }}"
          echo "success=$(IFS=';'; echo "${success[*]}")" >> $GITHUB_OUTPUT
          echo "failure=$(IFS=';'; echo "${failure[*]}")" >> $GITHUB_OUTPUT
          
          
      - name: 复制文件打包
        id: package
        run: |
          mkdir -p /home/runner/Database/Azerothcore/data
          mkdir -p /home/runner/Database/Azerothcore/modules/mod-playerbots/data
          cp -r "${{ env.ROOT_DIR }}"/data/* /home/runner/Database/Azerothcore/data/
          cp -r "${{ env.ROOT_DIR }}"/modules/mod-playerbots/data/* /home/runner/Database/Azerothcore/modules/mod-playerbots/data/
          tar -czvf "DataBase_${{ steps.ts.outputs.utcs }}.tar.gz" -C /home/runner Database
          echo "name=DataBase_${{ steps.ts.outputs.utcs }}.tar.gz" >> $GITHUB_OUTPUT
          
      - name: 创建上传Release
        uses: ncipollo/release-action@v1
        with:
         tag: "DataBase_${{ steps.ts.outputs.utcs }}"
         name: "DataBase_${{ steps.ts.outputs.utcs }}"
         body: |
              ### DataBase_${{ steps.ts.outputs.utcs }}
                 - 下载数据库解压，复制到以下位置(如果没有相应文件夹，需要您手动创建)，开始设置mysql环境，运行服务器将自动导入数据：
                        - Linux：/home/runner/work/build_azerothcore/build_azerothcore/
                        - Windows：D:\a\build_azerothcore\build_azerothcore\
         artifacts: "./${{ steps.package.outputs.name }}"
         token: ${{ secrets.BUILD_AZEROTHCORE }}
         replacesArtifacts: true

      - name: 清理旧releases
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
           keep_latest: 15
           delete_tags: true
        env:
         GITHUB_TOKEN: ${{ secrets.BUILD_AZEROTHCORE }}
