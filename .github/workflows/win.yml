name: Build AzerothCore (Windows)

# 触发条件：手动触发和每天北京时间3点自动运行
on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 19 * * *'  # UTC时间19点 = 北京时间3点

env:
  # 配置参数 - 可根据需要修改
  AZEROTHCORE_REPO: "azerothcore/azerothcore-wotlk"  # 主仓库地址
  AZEROTHCORE_BRANCH: "master"                       # 主仓库分支
  MODULES: "azerothcore/mod-ah-bot azerothcore/mod-eluna azerothcore/mod-transmog"  # 模块列表，空格分隔
  BUILD_DIR: "${{ github.workspace }}/build"
  INSTALL_DIR: "${{ github.workspace }}/azerothcore-install"
  CMAKE_GENERATOR: "Visual Studio 17 2022"
  CMAKE_PLATFORM: "x64"
  MYSQL_ROOT_PASSWORD: "root"

jobs:
  build:
    name: Build AzerothCore with VS2022
    runs-on: windows-latest  # 使用GitHub提供的Windows镜像，包含VS2022
    
    steps:
      - name: Checkout AzerothCore source
        uses: actions/checkout@v4
        with:
          repository: ${{ env.AZEROTHCORE_REPO }}
          ref: ${{ env.AZEROTHCORE_BRANCH }}
          path: 'azerothcore'
          submodules: 'recursive'
          fetch-depth: 0
          
      - name: Checkout modules
        run: |
          $modulesDir = "${{ github.workspace }}\azerothcore\modules"
          if (-not (Test-Path $modulesDir)) {
            New-Item -ItemType Directory -Path $modulesDir -Force | Out-Null
          }
          
          foreach ($module in $env:MODULES -split ' ') {
            $moduleName = $module.Split('/')[-1]
            $modulePath = Join-Path $modulesDir $moduleName
            Write-Host "Cloning module: $module to $modulePath"
            git clone https://github.com/$module.git $modulePath
          }
        shell: pwsh
        
      - name: Set up dependencies
        run: |
          # 安装Chocolatey包管理器
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          
          # 安装AzerothCore所需依赖
          choco install -y mysql --version=8.0.31
          choco install -y openssl --version=1.1.1q
          choco install -y boost-msvc-14.3 --version=1.79.0
          choco install -y git
          
          # 启动MySQL服务
          net start MySQL

      - name: Create build directory
        run: |
          New-Item -ItemType Directory -Path ${{ env.BUILD_DIR }} -Force | Out-Null
          New-Item -ItemType Directory -Path ${{ env.INSTALL_DIR }} -Force | Out-Null
        shell: pwsh
        
      - name: Configure CMake
        run: |
          cmake `
            -G "${{ env.CMAKE_GENERATOR }}" `
            -A ${{ env.CMAKE_PLATFORM }} `
            -S "${{ github.workspace }}/azerothcore" `
            -B ${{ env.BUILD_DIR }} `
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_AZEROTHCORE_TESTS=OFF `
            -DSCRIPTS=static `
            -DTOOLS=ON `
            -DMYSQL_ADD_INCLUDE_PATH="C:\Program Files\MySQL\MySQL Server 8.0\include" `
            -DMYSQL_LIBRARY="C:\Program Files\MySQL\MySQL Server 8.0\lib\libmysql.lib" `
            -DOPENSSL_ROOT_DIR="C:\Program Files\OpenSSL-Win64" `
            -DBOOST_ROOT="C:\local\boost_1_79_0"
        shell: pwsh
        
      - name: Build with MSBuild
        run: |
          cmake --build ${{ env.BUILD_DIR }} --config Release --target install -- /maxcpucount
        shell: pwsh
        
      - name: Package build artifacts
        run: |
          Compress-Archive -Path ${{ env.INSTALL_DIR }}\* -DestinationPath azerothcore-build.zip -Force
        shell: pwsh
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: azerothcore-windows-build
          path: azerothcore-build.zip
          retention-days: 14  # 保留14天
